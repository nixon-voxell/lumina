[workspace]
resolver = "2"
exclude = ["external_crates/"]
# members = ["crates/*", ]

[workspace.package]
version = "0.1.0"
edition = "2021"
readme = "README.md"
authors = ["Nixon <voxell.technologies@gmail.com>"]

[workspace.dependencies]
# Local dependencies
velyst = { path = "external_crates/velyst" }
bevy_vello_graphics = { path = "external_crates/bevy_vello_graphics" }
bevy_motiongfx = { path = "external_crates/bevy_motiongfx" }

bevy = { version = "0.14", features = ["wayland"] }
bevy_vello = "0.6"
lightyear = { version = "0.16", features = [
  "webtransport",
  "websocket",
  "leafwing",
  "steam",
  "avian2d",
] }
leafwing-input-manager = "0.14"
avian2d = { version = "0.1", default-features = false, features = [
  "2d",
  "f32",
  "parry-f32",
  "parallel",
  "serialize",
] }
blenvy = "0.1.0-alpha.1"
noisy_bevy = "0.7"
bincode = "1.3"
serde = "1"
rand = "0.8"
clap = { version = "4.5", features = ["derive"] }
smallvec = "1"

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[workspace.lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"
# Allow `if x == false { }`
bool_comparison = "allow"
redundant_type_annotations = "warn"

[package]
name = "lumina"
version.workspace = true
edition.workspace = true
readme.workspace = true
authors.workspace = true

[dependencies]
# Local dependencies
velyst = { workspace = true }
bevy_vello_graphics = { workspace = true }
bevy_motiongfx = { workspace = true }

bevy = { workspace = true }
bevy_vello = { workspace = true }
lightyear = { workspace = true }
leafwing-input-manager = { workspace = true }
avian2d = { workspace = true }
blenvy = { workspace = true }
noisy_bevy = { workspace = true }
bincode = { workspace = true }
serde = { workspace = true }
rand = { workspace = true }
clap = { workspace = true }
smallvec = { workspace = true }

[features]
default = [
    # Default to a native dev build.
    "dev_native",
]
dev = [
    # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/dynamic_linking",
    "bevy/bevy_dev_tools",
]
dev_native = [
    "dev",
    # Enable asset hot reloading for native dev builds.
    "bevy/file_watcher",
    # Enable embedded asset hot reloading for native dev builds.
    # Disabled due to slow startup time.
    # "bevy/embedded_watcher",
]

# Compile with Performance Optimizations:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"

[lints]
workspace = true
